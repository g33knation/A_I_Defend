version: "3.9"

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: a_i_defend-postgres-1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeit
      POSTGRES_DB: defense
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/app/init.sql:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: a_i_defend-rabbitmq-1
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672" # management UI

  model-server:
    image: a_i_defend-model-server
    container_name: a_i_defend-model-server-1
    build:
      context: ./model-server
    restart: always
    ports:
      - "11434:11434"

  backend:
    image: a_i_defend-backend
    container_name: a_i_defend-backend-1
    build:
      context: ./backend
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:changeit@postgres:5432/defense
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      MODEL_SERVER_URL: http://model-server:11434
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
      - model-server

  linux-scanner:
    image: a_i_defend-linux-scanner
    container_name: a_i_defend-linux-scanner-1
    build:
      context: ./linux-scanner
    restart: always
    depends_on:
      - backend
      - rabbitmq

volumes:
  postgres_data:
