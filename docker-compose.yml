version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: defense
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"   # changed host port to 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d defense"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgres://user:pass@db:5432/defense
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "8001:80"

  scanner:
    build: ./scanners
    container_name: scanner
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8000/events
    volumes:
      - /etc:/etc:ro
      - /var/log:/var/log:ro
    restart: unless-stopped

volumes:
  db_data:

